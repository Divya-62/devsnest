{"version":3,"sources":["components/AddTodo.jsx","actions/index.js","components/ListTodo.jsx","App.jsx","reducers/todoReducer.js","reducers/index.js","store.js","index.js"],"names":["AddTodo","useState","item","setItem","dispatch","useDispatch","type","placeholder","value","onChange","e","target","onClick","payload","addItem","title","done","ListTodo","todos","useSelector","state","todo","map","index","style","display","App","className","todoReducer","action","filter","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LA6BgBA,EAvBA,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAWC,cAEjB,OACI,gCACI,uBAAOC,KAAK,OAAOC,YAAY,kBAAkBC,MAAON,EACxDO,SAAU,SAACC,GACPP,EAAQO,EAAEC,OAAOH,UAIrB,wBAAQI,QAAS,WACbR,ECjBA,SAACF,GACb,MAAO,CACHI,KAAK,WACLO,QAASX,GDcQY,CAAQ,CACbC,MAAMb,EACNc,MAAK,KAETb,EAAQ,KALZ,qBEGGc,EAjBC,WACZ,IAAMb,EAAWC,cACXa,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAC3C,OACI,8BACKH,EAAMI,KAAI,SAACD,EAAKE,GAAN,OACJ,gCACK,oBAAIC,MAAO,CAAEC,QAAS,gBAAtB,SAAwCJ,EAAKN,QACjD,wBAAQH,QAAS,WACbR,EDHd,CACFE,KAAM,cACNO,QCCoCU,KADxB,6BCILG,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,4CACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCCSC,EAVI,WAAgD,IAA/CR,EAA8C,uDAAvC,CAAC,QAAS,QAAS,SAASS,EAAW,uCAC9D,MAAmB,aAAhBA,EAAOvB,KACA,GAAN,mBAAWc,GAAX,CAAiBS,EAAOhB,UAGL,gBAAfgB,EAAOvB,KACJc,EAAMU,QAAO,SAAC5B,EAAKqB,GAAN,OAAgBA,IAAUM,EAAOhB,WAElDO,G,OCHKW,EAFIC,YAAgB,CAACX,KAAKO,ICD3BK,EADDC,YAAYH,GCG1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFK,SAASC,eAAe,W","file":"static/js/main.693ea53b.chunk.js","sourcesContent":["\r\n\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItem } from \"../actions\";\r\n\r\nconst AddTodo = () => {\r\n    const [item, setItem] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" placeholder=\"Add a ToDo ... \" value={item} \r\n            onChange={(e) =>{\r\n                setItem(e.target.value);\r\n            }\r\n        }\r\n            /> \r\n            <button onClick={() => {\r\n                dispatch(addItem({\r\n                    title:item,\r\n                    done:false\r\n                }));\r\n                setItem(\"\");\r\n            }}>Add</button>\r\n            {/* {item} */}\r\n        </div>\r\n    )\r\n}\r\n export default AddTodo;\r\n","\r\n\r\nconst addItem = (item) => {\r\n    return {\r\n        type:\"ADD_ITEM\",\r\n        payload: item,\r\n    };\r\n};\r\n\r\nconst removeItem =(id) => {\r\n    return{\r\n        type: \"REMOVE_ITEM\",\r\n        payload: id,\r\n    };\r\n};\r\nexport {addItem,removeItem};\r\n","\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeItem } from \"../actions\";\r\nconst ListTodo =( )=> {\r\n    const dispatch = useDispatch();\r\n    const todos = useSelector((state) => state.todo);\r\n    return (\r\n        <div>\r\n            {todos.map((todo,index) =>(\r\n                   <div>\r\n                        <h4 style={{ display: \"inline-block\"}}>{todo.title}</h4>\r\n                    <button onClick={() => {\r\n                        dispatch(removeItem(index));\r\n                    }}>Delete</button>\r\n                   </div>\r\n            ))}\r\n           \r\n        </div>\r\n    );\r\n};\r\nexport default ListTodo;","\nimport './App.css';\nimport AddTodo from './components/AddTodo';\nimport ListTodo from './components/ListTodo';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>TO DO LIST</h1>\n      <AddTodo />\n      <ListTodo />\n    </div>\n  );\n}\n\nexport default App;\n","\r\n\r\nconst todoReducer =(state =['item1', 'item2', 'item3'],action) => {\r\n    if(action.type === \"ADD_ITEM\"){\r\n        return [...state,action.payload];\r\n\r\n    }\r\n    else if(action.type ===\"REMOVE_ITEM\"){\r\n        return state.filter((item,index) => index !== action.payload);\r\n    }\r\n    return state;\r\n};\r\nexport default todoReducer;","\r\n\r\nimport todoReducer from \"./todoReducer\"\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({todo:todoReducer})\r\n\r\nexport default  rootReducer;\r\n\r\n\r\n","\r\nimport rootReducer from \"./reducers\";\r\nimport { createStore } from \"redux\";\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./store\";\nimport {Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["component/Form.jsx","actions/index.js","component/WeatherCards.jsx","component/ThemeToggle.jsx","App.jsx","reducers/placeReducer.js","reducers/placeDataReducer.js","reducers/themeReducer.js","reducers/index.js","store.js","index.js"],"names":["Form","place","useSelector","state","theme","dispatch","useDispatch","className","type","value","onChange","e","payload","updatePlace","target","onClick","fetch","then","res","json","data","console","log","updatePlaceData","WeatherCard","placeData","location","src","current","condition","icon","alt","temp_c","text","name","wind_kph","humidity","precip_in","ThemeToggle","App","placeReducer","action","placeDataReducer","themeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.663c24cb.chunk.js","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { updatePlace, updatePlaceData } from \"../actions\";\r\n\r\nconst Form = () => {\r\n    const place = useSelector((state) => state.place);\r\n    const theme = useSelector((state) => state.place);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 form\">\r\n                    <input type=\"text\" \r\n                    value={place}\r\n                    onChange={(e)=>{\r\n                        dispatch(updatePlace(e.target.value));\r\n                    }}/>\r\n                    <button className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\r\n                        onClick={()=>{\r\n                            dispatch(updatePlaceData(place));\r\n                        }}\r\n                    >Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","const updatePlace = (place) => {\r\n    return {\r\n        type: \"UPDATE_PLACE\",\r\n        payload: place,\r\n    };\r\n};\r\n\r\nconst updatePlaceData = (place) => {\r\n    return (dispatch) => {\r\n        fetch(`https://api.weatherapi.com/v1/current.json?key=08b3afe0bb224a198ed75707212508&q=${place}`)\r\n      .then((res) => res.json())\r\n      .then((data)=>{\r\n          console.log(data);\r\n          dispatch({\r\n              type: \"UPDATE_PLACE_DATA\",\r\n              payload: data,\r\n          });\r\n      });\r\n    }\r\n};\r\n\r\nconst toggleTheme = () => {\r\n    return {\r\n        type: \"TOGGLE_THEME\",\r\n    };\r\n};\r\n\r\nexport {updatePlace, updatePlaceData, toggleTheme};","import {useSelector} from \"react-redux\";\r\n\r\nconst WeatherCard = () => {\r\n    const placeData = useSelector((state) => state.placeData);\r\n    const theme = useSelector((state) => state.theme);\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            <div className=\"offset-md-4  col-12 col-md-4 weather\">\r\n                    <div className={theme ? \"card dark\" : \"card light\"}>\r\n                        {placeData.location ? (\r\n                            <div>\r\n                                <img src={placeData.current.condition.icon} alt=\"\" />\r\n                                <div className=\"temp\">{placeData.current.temp_c}Â°C</div>\r\n                                <div className=\"desc\">{placeData.current.condition.text}</div>\r\n                                <div className=\"place\">{placeData.location.name}</div>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row whp\">\r\n                                        <div className=\"col-3\">\r\n                                            <div className=\"title\">Wind now</div>\r\n                                            <div className=\"data\">{placeData.current.wind_kph}\r\n                                                <span className=\"unit\">Km</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <div className=\"title\">Humidity</div>\r\n                                            <div className=\"data\">{placeData.current.humidity}\r\n                                                <span className=\"unit\">%</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <div className=\"title\">Precipitation</div>\r\n                                            <div className=\"data\">{placeData.current.precip_in}\r\n                                                <span className=\"unit\">%</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n\r\n                            </div>\r\n                        ):\r\n                        (\r\n                            <h2>Place not found</h2>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherCard;","import {useDispatch, useSelector} from \"react-redux\";\r\nimport { toggleTheme } from \"../actions\";\r\n\r\nconst ThemeToggle = () =>{\r\n    const theme = useSelector((state) => state.theme);\r\n    const dispatch = useDispatch();\r\n    return <div className=\"toggle-theme\">\r\n        <button className={theme ? \"btn btn-light\" : \"btn btn-dark\"} onClick={()=>{\r\n            dispatch(toggleTheme());\r\n        }}>{theme? \"Dark\" : \"Light\"}</button>\r\n    </div>\r\n};\r\n\r\nexport default ThemeToggle;","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport Form from \"./component/Form\";\nimport WeatherCard from \"./component/WeatherCards\";\nimport {useSelector} from \"react-redux\";\nimport ThemeToggle from \"./component/ThemeToggle\";\n\nfunction App() {\n  const theme = useSelector((state) => state.theme);\n  return (\n    <div className={theme ? \"App dark\" : \"App light\"}>\n      <ThemeToggle />\n      <Form />\n      <WeatherCard />\n    </div>\n  );\n}\n\nexport default App;\n","const placeReducer = (state = \"\", action) => {\r\n    if(action.type === \"UPDATE_PLACE\" )\r\n    {\r\n        return action.payload;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default placeReducer;","const placeDataReducer = (state = {}, action) => {\r\n    if(action.type === \"UPDATE_PLACE_DATA\")\r\n    {\r\n        return action.payload;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default placeDataReducer;","const themeReducer = (state = false, action) => {\r\n    if(action.type === \"TOGGLE_THEME\")\r\n    {\r\n        return !state;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default themeReducer;","import { combineReducers } from \"redux\";\r\nimport placeReducer from \"./placeReducer\";\r\nimport placeDataReducer from \"./placeDataReducer\";\r\nimport themeReducer from \"./themeReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    place: placeReducer,\r\n    placeData: placeDataReducer,\r\n    theme: themeReducer,\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}